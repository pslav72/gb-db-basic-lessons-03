Очень долго пробовал, через консоль сделать импорт json. 
Возникла проблема с подключением, не смог побороть.
mongoimport --port 27017 --db db_name --collection collection_name --authenticationMechanism=SCRAM-SHA-256 --authenticationDatabase admin --username admin --password 1234 --file primer-dataset.json
2020-12-19T16:07:15.228+0000	error connecting to host: could not connect to server: connection() : auth error: sasl conversation error: unable to authenticate using mechanism "SCRAM-SHA-256": (AuthenticationFailed) Authentication failed.

Попробовал добавить разрешенные хосты:
db.updateUser("admin", { authenticationRestrictions: [ {clientSource: ["0.0.0.0/0"] } ] } );

Как я понял, оказалася вопрос согласованность шифрования авторизации при mongoimport, т.к. просто mongo подключение отрбатывалось.

Import сделал через mongo-expess.

Ну и дальше по практиковался

> use user;
switched to db user
> db.users.insert({"name": "Tom", "age": 28, languages: ["english", "spanish"]})
WriteResult({ "nInserted" : 1 })
> db.users.find()
{ "_id" : ObjectId("5fde27053e208dc6b70f8b82"), "name" : "Tom", "age" : 28, "languages" : [ "english", "spanish" ] }
>
> db.users.insert({"company":{"name":"Microsoft","age": 25, languages: ["english", "spanish"]}})
WriteResult({ "nInserted" : 1 })
> db.users.find({"company.name": "Microsoft"})
{ "_id" : ObjectId("5fde276b3e208dc6b70f8b83"), "company" : { "name" : "Microsoft", "age" : 25, "languages" : [ "english", "spanish" ] } }
> use db_name;
switched to db db_name


> db.collection_name.find({name: "Peter Luger Steakhouse"});
{ "_id" : ObjectId("5fde26701d0a5d39f4d38d43"), "address" : { "building" : "178", "coord" : [ -73.96252129999999, 40.7098035 ], "street" : "Broadway", "zipcode" : "11211" }, "borough" : "Brooklyn", "cuisine" : "Steak", "grades" : [ { "date" : ISODate("2014-03-08T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-09-28T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2013-03-26T00:00:00Z"), "grade" : "A", "score" : 3 }, { "date" : ISODate("2012-09-10T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2011-08-15T00:00:00Z"), "grade" : "A", "score" : 13 } ], "name" : "Peter Luger Steakhouse", "restaurant_id" : "40364335" }
>
> db.collection_name.find({"address.building" : "10004"}});
uncaught exception: SyntaxError: missing ) after argument list :
@(shell):1:54
> db.collection_name.find({"address.building" : "10004"});
{ "_id" : ObjectId("5fde26701d0a5d39f4d38d42"), "address" : { "building" : "10004", "coord" : [ -74.03400479999999, 40.6127077 ], "street" : "4 Avenue", "zipcode" : "11209" }, "borough" : "Brooklyn", "cuisine" : "Italian", "grades" : [ { "date" : ISODate("2014-02-25T00:00:00Z"), "grade" : "A", "score" : 12 }, { "date" : ISODate("2013-06-27T00:00:00Z"), "grade" : "A", "score" : 7 }, { "date" : ISODate("2012-12-03T00:00:00Z"), "grade" : "A", "score" : 10 }, { "date" : ISODate("2011-11-09T00:00:00Z"), "grade" : "A", "score" : 12 } ], "name" : "Philadelhia Grille Express", "restaurant_id" : "40364305" }
> db.collection_name.insert({"street": "Lenina"});
WriteResult({ "nInserted" : 1 })
> db.collection_name.find({"street" : "Lenina"});
{ "_id" : ObjectId("5fde2d413e208dc6b70f8b85"), "street" : "Lenina" }
>